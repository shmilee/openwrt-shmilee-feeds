--- a/netlink.c
+++ b/netlink.c
@@ -75,7 +75,7 @@
 						dlog(LOG_DEBUG, 3, "%s, ifindex %d, flags is *NOT* running", ifname, ifinfo->ifi_index);
 					}
 					if (!reloaded) {
-						reload_config();
+						reload_config(LOG_DEBUG);
 						reloaded = 1;
 					}
 				}
--- a/radvd.c
+++ b/radvd.c
@@ -439,7 +439,7 @@
 
 		if (sighup_received) {
 			dlog(LOG_INFO, 3, "sig hup received.\n");
-			reload_config();
+			reload_config(LOG_INFO);
 			sighup_received = 0;
 		}
 
@@ -541,11 +541,11 @@
 	}
 }
 
-void reload_config(void)
+void reload_config(int loglevel)
 {
 	struct Interface *iface;
 
-	flog(LOG_INFO, "attempting to reread config file");
+	flog(loglevel, "attempting to reread config file");
 
 	iface = IfaceList;
 	while (iface) {
@@ -610,7 +610,7 @@
 	config_interface();
 	kickoff_adverts();
 
-	flog(LOG_INFO, "resuming normal operation");
+	flog(loglevel, "resuming normal operation");
 }
 
 void sighup_handler(int sig)
--- a/radvd.h
+++ b/radvd.h
@@ -208,7 +208,7 @@
 
 /* radvd.c */
 int check_ip6_forwarding(void);
-void reload_config(void);
+void reload_config(int);
 void reset_prefix_lifetimes(void);
 
 /* timer.c */
--- a/send.c
+++ b/send.c
@@ -137,7 +137,7 @@
 			 * reload_config() will kick off new timers anyway.  This avoids
 			 * timer list corruption.
 			 */
-			reload_config();
+			reload_config(LOG_INFO);
 			return -1;
 		}
 	}
